(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{73:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a(3),l=a(7),b=(a(0),a(88)),r={id:"props",title:"Props",slug:"/props"},o={unversionedId:"props",id:"props",isDocsHomePage:!1,title:"Props",description:"Configuration",source:"@site/docs/props.md",slug:"/props",permalink:"/react-native-hold-menu/docs/props",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/props.md",version:"current",sidebar:"someSidebar",previous:{title:"Usage",permalink:"/react-native-hold-menu/docs/usage"},next:{title:"Examples",permalink:"/react-native-hold-menu/docs/examples"}},c=[{value:"Configuration",id:"configuration",children:[{value:"<code>items</code>",id:"items",children:[]},{value:"<code>menuAnchorPosition</code>",id:"menuanchorposition",children:[]},{value:"<code>bottom</code>",id:"bottom",children:[]},{value:"<code>disableMove</code>",id:"disablemove",children:[]},{value:"<code>styles</code>",id:"styles",children:[]}]}],i={toc:c};function p(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"configuration"},"Configuration"),Object(b.b)("h3",{id:"items"},Object(b.b)("inlineCode",{parentName:"h3"},"items")),Object(b.b)("p",null,"Array of menu items."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"name"),Object(b.b)("th",{parentName:"tr",align:null},"type"),Object(b.b)("th",{parentName:"tr",align:null},"required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"text"),Object(b.b)("td",{parentName:"tr",align:null},"string"),Object(b.b)("td",{parentName:"tr",align:null},"YES")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"icon"),Object(b.b)("td",{parentName:"tr",align:null},"() => React.ReactNode ","|"," null"),Object(b.b)("td",{parentName:"tr",align:null},"NO")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"onPress"),Object(b.b)("td",{parentName:"tr",align:null},"function"),Object(b.b)("td",{parentName:"tr",align:null},"YES")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"isTitle"),Object(b.b)("td",{parentName:"tr",align:null},"boolean"),Object(b.b)("td",{parentName:"tr",align:null},"NO")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"isDestructive"),Object(b.b)("td",{parentName:"tr",align:null},"boolean"),Object(b.b)("td",{parentName:"tr",align:null},"NO")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"withSeperator"),Object(b.b)("td",{parentName:"tr",align:null},"boolean"),Object(b.b)("td",{parentName:"tr",align:null},"NO")))),Object(b.b)("h4",{id:"example"},"Example"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-tsx"},"<HoldItem\n  items={[\n    { text: 'Action 1', icon: null, onPress: () => {} },\n    { text: 'Action 2', icon: null, onPress: () => {} },\n  ]}\n/>\n")),Object(b.b)("p",null,"Check out the other examples ",Object(b.b)("a",{parentName:"p",href:"examples"},"here"),"."),Object(b.b)("h3",{id:"menuanchorposition"},Object(b.b)("inlineCode",{parentName:"h3"},"menuAnchorPosition")),Object(b.b)("p",null,'Menu anchor position is calculated automaticly. But you can override the calculation by passing an anchor position.\nAuto calculation will be "top-left", "top-center" or "top-right". If you want to open menu from bottom, you need to use\n"bottom-left", "bottom-center" or "bottom-right". Or if you want to use auto calculation for bottom, see ',Object(b.b)("a",{parentName:"p",href:"#bottom"},Object(b.b)("inlineCode",{parentName:"a"},"bottom"))," prop."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"type"),Object(b.b)("th",{parentName:"tr",align:null},"required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},'"top-center" ',"|",' "top-left" ',"|",' "top-right"',"|",' "bottom-center" ',"|",' "bottom-left" ',"|",' "bottom-right"'),Object(b.b)("td",{parentName:"tr",align:null},"NO")))),Object(b.b)("h4",{id:"example-1"},"Example"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-tsx"},'<HoldItem menuAnchorPosition="top-center" />\n')),Object(b.b)("h3",{id:"bottom"},Object(b.b)("inlineCode",{parentName:"h3"},"bottom")),Object(b.b)("p",null,"Hold Menu automaticly calculates if you do not set ",Object(b.b)("a",{parentName:"p",href:"#menuanchorposition"},Object(b.b)("inlineCode",{parentName:"a"},"menuAnchorPosition")),".\nIf you want to open menu from bottom like ",Object(b.b)("em",{parentName:"p"},"Telegram bottom nav buttons in iOS")," and use auto anchor calculation,\nyou should set ",Object(b.b)("inlineCode",{parentName:"p"},"bottom")," as true."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"type"),Object(b.b)("th",{parentName:"tr",align:null},"default"),Object(b.b)("th",{parentName:"tr",align:null},"required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"boolean"),Object(b.b)("td",{parentName:"tr",align:null},"false"),Object(b.b)("td",{parentName:"tr",align:null},"NO")))),Object(b.b)("h3",{id:"disablemove"},Object(b.b)("inlineCode",{parentName:"h3"},"disableMove")),Object(b.b)("p",null,"You may need disable move of holded item for your example. Set it true."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"type"),Object(b.b)("th",{parentName:"tr",align:null},"default"),Object(b.b)("th",{parentName:"tr",align:null},"required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"boolean"),Object(b.b)("td",{parentName:"tr",align:null},"false"),Object(b.b)("td",{parentName:"tr",align:null},"NO")))),Object(b.b)("h3",{id:"styles"},Object(b.b)("inlineCode",{parentName:"h3"},"styles")),Object(b.b)("p",null,"Hold item container styles. You may need ",Object(b.b)("strong",{parentName:"p"},"dynamic width or hight")," for some examples like message boxes. See Whatsapp example."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"type"),Object(b.b)("th",{parentName:"tr",align:null},"default"),Object(b.b)("th",{parentName:"tr",align:null},"required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"ViewStyle ","|"," ViewStyle[];"),Object(b.b)("td",{parentName:"tr",align:null},"{}"),Object(b.b)("td",{parentName:"tr",align:null},"NO")))),Object(b.b)("h4",{id:"example-2"},"Example"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-tsx"},"// For Whatsapp example\n<HoldItem\n  styles={{\n    position: 'relative',\n    maxWidth: '80%',\n  }}\n/>\n")))}p.isMDXComponent=!0}}]);