(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var o=n(3),i=n(7),a=(n(0),n(88)),r={id:"usage",title:"Usage",slug:"/usage",hide_table_of_contents:!0,hide_title:!0},s={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Usage",source:"@site/docs/usage.md",slug:"/usage",permalink:"/react-native-hold-menu/docs/usage",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/usage.md",version:"current",sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/react-native-hold-menu/docs/"},next:{title:"Props",permalink:"/react-native-hold-menu/docs/props"}},c=[{value:"Usage",id:"usage",children:[{value:"Provider",id:"provider",children:[]},{value:"Icons",id:"icons",children:[]},{value:"Wrapper",id:"wrapper",children:[]}]}],d={toc:c};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("h3",{id:"provider"},"Provider"),Object(a.b)("p",null,"Before using Hold Menu in your application, you need to wrap your app with ",Object(a.b)("inlineCode",{parentName:"p"},"HoldMenuProvider")," first."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\n\nimport { HoldMenuProvider } from 'react-native-hold-menu';\n\nconst App = () => {\n  return (\n    <HoldMenuProvider theme=\"light\">\n      {/* Your app components */}\n    </HoldMenuProvider>\n  );\n};\n\nexport default App;\n")),Object(a.b)("h3",{id:"icons"},"Icons"),Object(a.b)("p",null,"If you want to use icon in your menu items, you need to set you Icon component to HoldMenuProvider to be able to use it. And than you can set just name of the icon in menu item list with ",Object(a.b)("inlineCode",{parentName:"p"},"icon")," prop like below."),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",{parentName:"div",className:"admonition-heading"},Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",{parentName:"h5",className:"admonition-icon"},Object(a.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(a.b)("div",{parentName:"div",className:"admonition-content"},Object(a.b)("p",{parentName:"div"},"Icon can be used with just ",Object(a.b)("strong",{parentName:"p"},"react-native-vector-icons")," for now."))),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"import FeatherIcon from 'react-native-vector-icons/Feather';\n\n/* ... */\n<HoldMenuProvider iconComponent={FeatherIcon} theme=\"light\">\n\n")),Object(a.b)("h3",{id:"wrapper"},"Wrapper"),Object(a.b)("p",null,"Now you can wrap your components with ",Object(a.b)("inlineCode",{parentName:"p"},"HoldItem"),". You need to set ",Object(a.b)("a",{parentName:"p",href:"/react-native-hold-menu/docs/props#items"},"items")," prop and also see other optional props for your menu."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { View } from 'react-native';\n\nimport { HoldItem } from 'react-native-hold-menu';\n\nimport styles from './styles';\n\nconst MenuItems = [\n  { text: 'Actions', icon: 'home', isTitle: true, onPress: () => {} },\n  { text: 'Action 1', icon: 'edit', onPress: () => {} },\n  { text: 'Action 2', icon: 'map-pin', withSeparator: true, onPress: () => {} },\n  { text: 'Action 3', icon: 'trash', isDestructive: true, onPress: () => {} },\n];\n\nconst Example = () => {\n  return (\n    <View style={styles.container}>\n      <HoldItem items={MenuItems}>\n        <View style={styles.item} />\n      </HoldItem>\n      <HoldItem items={MenuItems}>\n        <View style={styles.item} />\n      </HoldItem>\n      <HoldItem items={MenuItems} menuAnchorPosition=\"bottom-right\">\n        <View style={styles.item} />\n      </HoldItem>\n    </View>\n  );\n};\n\nexport default Example;\n")))}p.isMDXComponent=!0}}]);